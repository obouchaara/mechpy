Search.setIndex({"docnames": ["index", "notebooks/symbolic/tensor", "reference/numeric/tensor", "reference/symbolic/tensor", "usage/quickstart"], "filenames": ["index.rst", "notebooks/symbolic/tensor.ipynb", "reference/numeric/tensor.rst", "reference/symbolic/tensor.rst", "usage/quickstart.rst"], "titles": ["Welcome to MechPy\u2019s documentation!", "Symbolic Tensor Notebook", "Numeric Tensor", "Symbolic Tensor", "Quickstart Guide"], "terms": {"quickstart": 0, "guid": 0, "instal": 0, "run": 0, "your": 0, "first": 0, "exampl": 0, "next": 0, "step": 0, "numer": 0, "tensor": 0, "threebythreetensor": [0, 2, 4], "sixbysixtensor": [0, 2], "symmetricthreebythreetensor": [0, 2], "symbol": 0, "symbolictensor": [0, 1], "modul": [0, 4], "symbolicthreebythreetensor": [0, 1, 3], "symbolicsixbysixtensor": [0, 1, 3], "symbolicsymmetricthreebythreetensor": [0, 1, 3], "notebook": 0, "multipl": 0, "convert": [0, 2], "get": [0, 4], "compon": [0, 2, 3], "eigenvalu": [0, 2, 3], "eigenvector": [0, 3], "index": [0, 3], "search": 0, "page": [0, 4], "1": [1, 2, 3], "import": [1, 4], "sympi": [1, 3], "sp": 1, "mechpi": [1, 2, 3, 4], "core": [1, 2, 3, 4], "2": [1, 2, 3, 4], "b": 1, "c": 1, "d": 1, "e": 1, "f": 1, "g": 1, "h": 1, "i": [1, 2, 3, 4], "3": [1, 2, 3, 4], "data": [1, 2, 3], "immutabledensendimarrai": 1, "A": [1, 3], "displai": 1, "displaystyl": 1, "left": 1, "begin": [1, 4], "matrix": [1, 2, 3], "end": 1, "right": 1, "4": [1, 2, 3], "from_list": [1, 2, 3, 4], "shape": [1, 2, 3], "5": [1, 2, 3, 4], "6": [1, 2, 3, 4], "list_mode1": 1, "list_mode2": 1, "7": 1, "to_gener": [1, 2, 3], "8": 1, "mode": [1, 2, 3], "9": 1, "10": 1, "11": 1, "12": 1, "data_list": 1, "rang": 1, "36": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "20": 1, "21": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "29": 1, "30": 1, "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "j": [1, 3], "x": 1, "x_11": 1, "x_12": 1, "x_21": 1, "x_22": 1, "x_": 1, "x_13": 1, "x_23": 1, "x_31": 1, "x_32": 1, "x_33": 1, "x_14": 1, "x_15": 1, "x_16": 1, "x_24": 1, "x_25": 1, "x_26": 1, "x_34": 1, "x_35": 1, "x_36": 1, "x_41": 1, "x_42": 1, "x_43": 1, "x_44": 1, "x_45": 1, "x_46": 1, "x_51": 1, "x_52": 1, "x_53": 1, "x_54": 1, "x_55": 1, "x_56": 1, "x_61": 1, "x_62": 1, "x_63": 1, "x_64": 1, "x_65": 1, "x_66": 1, "41": 1, "42": 1, "43": 1, "44": 1, "45": 1, "46": 1, "51": 1, "52": 1, "53": 1, "54": 1, "55": 1, "56": 1, "61": 1, "62": 1, "63": 1, "64": 1, "65": 1, "66": 1, "0": [1, 2, 3], "to_3x3": [1, 2, 3], "is_symmetr": [1, 2, 3, 4], "to_sym_3x3": [1, 2, 3], "true": [1, 2], "to_symmetr": [1, 2, 3], "_": 1, "frac": 1, "sqrt": 1, "eig": 1, "eig_val": 1, "eig_vect": 1, "p": 1, "diagon": [1, 3], "class": [2, 3, 4], "base": [2, 3], "object": [2, 3], "repres": [2, 3], "gener": 2, "encapsul": 2, "numpi": 2, "arrai": [2, 3], "attribut": 2, "np": 2, "ndarrai": 2, "The": [2, 3], "store": 2, "method": [2, 3], "check": [2, 3, 4], "symmetr": [2, 3], "is_second_rank": [2, 3], "second": 2, "rank": 2, "is_fourth_rank": [2, 3], "fourth": 2, "is_3x3": 2, "3x3": [2, 3], "is_6x6": 2, "6x6": [2, 3], "is_3x3x3x3": 2, "3x3x3x3": 2, "to_6x6": [2, 3], "creat": [2, 3, 4], "from": [2, 3, 4], "list": [2, 3, 4], "return": [2, 3], "bool": 2, "fals": 2, "otherwis": 2, "classmethod": [2, 3], "voigt_map": [2, 3], "inverse_voigt_map": [2, 3], "thi": [3, 4], "offer": 3, "manipul": 3, "us": [3, 4], "It": 3, "": [3, 4], "design": 3, "handl": 3, "variou": 3, "oper": 3, "manner": 3, "ideal": 3, "applic": [3, 4], "physic": 3, "engin": 3, "relat": 3, "field": 3, "initi": 3, "provid": 3, "basic": [3, 4], "properti": 3, "includ": 3, "symmetri": 3, "inherit": 3, "specif": 3, "addit": 3, "tailor": 3, "structur": 3, "extend": 3, "function": [3, 4], "work": [3, 4], "special": 3, "incorpor": 3, "voigt": 3, "map": 3, "transform": 3, "comput": 3, "focus": 3, "emphas": 3, "eas": 3, "flexibl": 3, "leverag": 3, "power": 3, "mathemat": 3, "express": 3, "static": 3, "mode2_map": 3, "n": 3, "dictionari": 3, "tupl": 3, "kei": 3, "flatten": 3, "valu": 3, "posit": 3, "an": [3, 4], "nxn": 3, "its": 3, "correspond": 3, "paramet": 3, "size": 3, "mode2_map_invers": 3, "invers": 3, "is_squar": 3, "to_matrix": 3, "name": 3, "walk": 4, "you": 4, "through": 4, "start": 4, "project": 4, "ll": 4, "learn": 4, "how": 4, "softwar": 4, "simpl": 4, "see": 4, "action": 4, "can": 4, "do": 4, "pip": 4, "ensur": 4, "have": 4, "necessari": 4, "prerequisit": 4, "ani": 4, "now": 4, "let": 4, "new": 4, "python": 4, "script": 4, "open": 4, "interact": 4, "session": 4, "execut": 4, "m": 4, "print": 4, "demonstr": 4, "For": 4, "more": 4, "complex": 4, "case": 4, "refer": 4, "document": 4, "congratul": 4, "ve": 4, "successfulli": 4, "To": 4, "dive": 4, "deeper": 4, "consid": 4, "explor": 4, "follow": 4, "resourc": 4, "user": 4, "detail": 4, "inform": 4, "about": 4, "out": 4, "link_to_user_guid": 4, "api": 4, "If": 4, "re": 4, "look": 4, "link_to_api_refer": 4, "great": 4, "visit": 4, "our": 4, "link_to_exampl": 4, "encount": 4, "issu": 4, "question": 4, "pleas": 4, "consult": 4, "faq": 4, "link_to_faq": 4, "contact": 4, "u": 4, "link_to_contact_pag": 4}, "objects": {"mechpy.core.numeric": [[2, 0, 0, "-", "tensor"]], "mechpy.core.numeric.tensor": [[2, 1, 1, "", "SixBySixTensor"], [2, 1, 1, "", "SymmetricThreeByThreeTensor"], [2, 1, 1, "", "Tensor"], [2, 1, 1, "", "ThreeByThreeTensor"]], "mechpy.core.numeric.tensor.SixBySixTensor": [[2, 2, 1, "", "from_list"], [2, 3, 1, "", "shape"]], "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor": [[2, 3, 1, "", "INVERSE_VOIGT_MAPPING"], [2, 3, 1, "", "VOIGT_MAPPING"], [2, 2, 1, "", "eigenvalues"], [2, 2, 1, "", "from_list"], [2, 2, 1, "", "is_symmetric"], [2, 3, 1, "", "shape"], [2, 2, 1, "", "to_general"]], "mechpy.core.numeric.tensor.Tensor": [[2, 2, 1, "", "from_list"], [2, 2, 1, "", "is_3x3"], [2, 2, 1, "", "is_3x3x3x3"], [2, 2, 1, "", "is_6x6"], [2, 2, 1, "", "is_fourth_rank"], [2, 2, 1, "", "is_second_rank"], [2, 2, 1, "", "is_symmetric"], [2, 2, 1, "", "to_3x3"], [2, 2, 1, "", "to_6x6"], [2, 2, 1, "", "to_sym_3x3"]], "mechpy.core.numeric.tensor.ThreeByThreeTensor": [[2, 2, 1, "", "from_list"], [2, 3, 1, "", "shape"], [2, 2, 1, "", "to_symmetric"]], "mechpy.core.symbolic": [[3, 0, 0, "-", "tensor"]], "mechpy.core.symbolic.tensor": [[3, 1, 1, "", "SymbolicSixBySixTensor"], [3, 1, 1, "", "SymbolicSymmetricThreeByThreeTensor"], [3, 1, 1, "", "SymbolicTensor"], [3, 1, 1, "", "SymbolicThreeByThreeTensor"]], "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor": [[3, 2, 1, "", "create"], [3, 2, 1, "", "from_list"], [3, 3, 1, "", "shape"]], "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor": [[3, 3, 1, "", "INVERSE_VOIGT_MAPPING"], [3, 3, 1, "", "VOIGT_MAPPING"], [3, 2, 1, "", "create"], [3, 2, 1, "", "diagonalize"], [3, 2, 1, "", "eigenvalues"], [3, 2, 1, "", "eigenvectors"], [3, 2, 1, "", "from_list"], [3, 2, 1, "", "is_symmetric"], [3, 3, 1, "", "shape"], [3, 2, 1, "", "to_general"]], "mechpy.core.symbolic.tensor.SymbolicTensor": [[3, 2, 1, "", "create"], [3, 2, 1, "", "diagonalize"], [3, 2, 1, "", "eigenvalues"], [3, 2, 1, "", "eigenvectors"], [3, 2, 1, "", "from_list"], [3, 2, 1, "", "is_fourth_rank"], [3, 2, 1, "", "is_second_rank"], [3, 2, 1, "", "is_square"], [3, 2, 1, "", "is_symmetric"], [3, 2, 1, "", "mode2_map"], [3, 2, 1, "", "mode2_map_inverse"], [3, 2, 1, "", "to_3x3"], [3, 2, 1, "", "to_6x6"], [3, 2, 1, "", "to_matrix"], [3, 2, 1, "", "to_sym_3x3"]], "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor": [[3, 2, 1, "", "create"], [3, 2, 1, "", "from_list"], [3, 3, 1, "", "shape"], [3, 2, 1, "", "to_symmetric"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "mechpi": 0, "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "symbol": [1, 3], "tensor": [1, 2, 3], "notebook": 1, "init": 1, "method": 1, "from": 1, "list": 1, "3x3": 1, "symmetr": 1, "6x6": 1, "creat": 1, "multipl": 1, "convert": 1, "gener": 1, "get": 1, "compon": 1, "eigenvalu": 1, "eigenvector": 1, "numer": 2, "symbolictensor": 3, "modul": 3, "quickstart": 4, "guid": 4, "instal": 4, "run": 4, "your": 4, "first": 4, "exampl": 4, "next": 4, "step": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Welcome to MechPy\u2019s documentation!": [[0, "welcome-to-mechpy-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Symbolic Tensor Notebook": [[1, "Symbolic-Tensor-Notebook"]], "Symbolic Tensor": [[1, "Symbolic-Tensor"], [1, "id1"], [3, "module-mechpy.core.symbolic.tensor"]], "Init Method": [[1, "Init-Method"]], "From List method": [[1, "From-List-method"]], "Symbolic 3x3 Tensor": [[1, "Symbolic-3x3-Tensor"]], "Symbolic Symmetric 3x3 Tensor": [[1, "Symbolic-Symmetric-3x3-Tensor"]], "Symbolic 6x6 Tensor": [[1, "Symbolic-6x6-Tensor"]], "Create Method": [[1, "Create-Method"]], "Multiplication": [[1, "Multiplication"]], "Converting": [[1, "Converting"]], "Tensor to 3x3": [[1, "Tensor-to-3x3"]], "General to Symmetric 3x3": [[1, "General-to-Symmetric-3x3"]], "3x3 to Symmetric": [[1, "3x3-to-Symmetric"]], "Converting to general": [[1, "Converting-to-general"]], "Getting Tensor Components": [[1, "Getting-Tensor-Components"]], "Eigenvalues and Eigenvectors": [[1, "Eigenvalues-and-Eigenvectors"]], "Numeric Tensor": [[2, "module-mechpy.core.numeric.tensor"]], "SymbolicTensor Module": [[3, "symbolictensor-module"]], "Quickstart Guide": [[4, "quickstart-guide"]], "Installation": [[4, "installation"]], "Running Your First Example": [[4, "running-your-first-example"]], "Next Steps": [[4, "next-steps"]]}, "indexentries": {"inverse_voigt_mapping (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.INVERSE_VOIGT_MAPPING"]], "sixbysixtensor (class in mechpy.core.numeric.tensor)": [[2, "mechpy.core.numeric.tensor.SixBySixTensor"]], "symmetricthreebythreetensor (class in mechpy.core.numeric.tensor)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor"]], "tensor (class in mechpy.core.numeric.tensor)": [[2, "mechpy.core.numeric.tensor.Tensor"]], "threebythreetensor (class in mechpy.core.numeric.tensor)": [[2, "mechpy.core.numeric.tensor.ThreeByThreeTensor"]], "voigt_mapping (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.VOIGT_MAPPING"]], "eigenvalues() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.eigenvalues"]], "from_list() (mechpy.core.numeric.tensor.sixbysixtensor class method)": [[2, "mechpy.core.numeric.tensor.SixBySixTensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.symmetricthreebythreetensor class method)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.tensor class method)": [[2, "mechpy.core.numeric.tensor.Tensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.threebythreetensor class method)": [[2, "mechpy.core.numeric.tensor.ThreeByThreeTensor.from_list"]], "is_3x3() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_3x3"]], "is_3x3x3x3() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_3x3x3x3"]], "is_6x6() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_6x6"]], "is_fourth_rank() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_fourth_rank"]], "is_second_rank() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_second_rank"]], "is_symmetric() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.is_symmetric"]], "is_symmetric() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.is_symmetric"]], "mechpy.core.numeric.tensor": [[2, "module-mechpy.core.numeric.tensor"]], "module": [[2, "module-mechpy.core.numeric.tensor"], [3, "module-mechpy.core.symbolic.tensor"]], "shape (mechpy.core.numeric.tensor.sixbysixtensor attribute)": [[2, "mechpy.core.numeric.tensor.SixBySixTensor.shape"]], "shape (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.shape"]], "shape (mechpy.core.numeric.tensor.threebythreetensor attribute)": [[2, "mechpy.core.numeric.tensor.ThreeByThreeTensor.shape"]], "to_3x3() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.to_3x3"]], "to_6x6() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.to_6x6"]], "to_general() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[2, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.to_general"]], "to_sym_3x3() (mechpy.core.numeric.tensor.tensor method)": [[2, "mechpy.core.numeric.tensor.Tensor.to_sym_3x3"]], "to_symmetric() (mechpy.core.numeric.tensor.threebythreetensor method)": [[2, "mechpy.core.numeric.tensor.ThreeByThreeTensor.to_symmetric"]], "inverse_voigt_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.INVERSE_VOIGT_MAPPING"]], "symbolicsixbysixtensor (class in mechpy.core.symbolic.tensor)": [[3, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor"]], "symbolicsymmetricthreebythreetensor (class in mechpy.core.symbolic.tensor)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor"]], "symbolictensor (class in mechpy.core.symbolic.tensor)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor"]], "symbolicthreebythreetensor (class in mechpy.core.symbolic.tensor)": [[3, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor"]], "voigt_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.VOIGT_MAPPING"]], "create() (mechpy.core.symbolic.tensor.symbolicsixbysixtensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolictensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.create"]], "diagonalize() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.diagonalize"]], "diagonalize() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.diagonalize"]], "eigenvalues() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.eigenvalues"]], "eigenvalues() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.eigenvalues"]], "eigenvectors() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.eigenvectors"]], "eigenvectors() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.eigenvectors"]], "from_list() (mechpy.core.symbolic.tensor.symbolicsixbysixtensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolictensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor class method)": [[3, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.from_list"]], "is_fourth_rank() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.is_fourth_rank"]], "is_second_rank() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.is_second_rank"]], "is_square() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.is_square"]], "is_symmetric() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.is_symmetric"]], "is_symmetric() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.is_symmetric"]], "mechpy.core.symbolic.tensor": [[3, "module-mechpy.core.symbolic.tensor"]], "mode2_map() (mechpy.core.symbolic.tensor.symbolictensor static method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.mode2_map"]], "mode2_map_inverse() (mechpy.core.symbolic.tensor.symbolictensor static method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.mode2_map_inverse"]], "shape (mechpy.core.symbolic.tensor.symbolicsixbysixtensor attribute)": [[3, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.shape"]], "shape (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.shape"]], "shape (mechpy.core.symbolic.tensor.symbolicthreebythreetensor attribute)": [[3, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.shape"]], "to_3x3() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.to_3x3"]], "to_6x6() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.to_6x6"]], "to_general() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.to_general"]], "to_matrix() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.to_matrix"]], "to_sym_3x3() (mechpy.core.symbolic.tensor.symbolictensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicTensor.to_sym_3x3"]], "to_symmetric() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor method)": [[3, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.to_symmetric"]]}})