Search.setIndex({"docnames": ["index", "notebooks", "notebooks/symbolic/elasticity", "notebooks/symbolic/material", "notebooks/symbolic/tensor", "numeric", "reference/numeric/tensor", "reference/symbolic/material", "reference/symbolic/strain", "reference/symbolic/stress", "reference/symbolic/tensor", "symbolic", "usage/quickstart"], "filenames": ["index.rst", "notebooks.rst", "notebooks/symbolic/elasticity.ipynb", "notebooks/symbolic/material.ipynb", "notebooks/symbolic/tensor.ipynb", "numeric.rst", "reference/numeric/tensor.rst", "reference/symbolic/material.rst", "reference/symbolic/strain.rst", "reference/symbolic/stress.rst", "reference/symbolic/tensor.rst", "symbolic.rst", "usage/quickstart.rst"], "titles": ["Welcome to MechPy\u2019s documentation!", "Notebooks", "Symblic Elasticity Notebook", "Symbolic Material Notebook", "Symbolic Tensor Notebook", "Numeric", "Numeric Tensor", "Symbolic Material", "Symbolic Strain Tensor", "Symbolic Stress Tensor", "Symbolic Tensor", "Symbolic", "Quickstart Guide"], "terms": {"quickstart": 0, "guid": 0, "instal": 0, "run": 0, "your": 0, "first": 0, "exampl": 0, "next": 0, "step": 0, "numer": 0, "tensor": [0, 1, 5, 11], "symbol": [0, 1, 2], "strain": [0, 11], "stress": [0, 11], "materi": [0, 1, 2, 11], "notebook": 0, "symblic": [0, 1], "elast": [0, 1], "index": [0, 10], "modul": [0, 11, 12], "search": 0, "page": [0, 12], "convert": [1, 6], "multipl": 1, "get": [1, 12], "compon": [1, 6, 10], "eigenvalu": [1, 6, 10], "eigenvector": [1, 10], "simpl": [1, 4, 12], "traction": 1, "deform": 1, "1": [2, 3, 6, 8, 9, 10], "import": [2, 3, 4, 12], "sympi": [2, 3, 4, 10], "sp": [2, 3, 4], "from": [2, 3, 6, 10, 12], "mechpi": [2, 3, 4, 6, 7, 8, 9, 10, 12], "core": [2, 3, 4, 6, 7, 8, 9, 10, 12], "symbolicisotropicmateri": [2, 3, 7, 11], "coord": 2, "symboliccartesiancoordsystem": 2, "symbolicstresstensor": [2, 9, 11], "symbolicstraintensor": [2, 8, 11], "symboliclinearelast": 2, "2": [2, 3, 6, 8, 9, 10, 12], "symbolic_isotropic_materi": [2, 3], "displai": [2, 3, 4], "compliance_tensor": [2, 3, 7], "data": [2, 3, 4, 6, 7, 8, 9, 10], "39": [2, 3, 4], "youngs_modulu": [2, 3, 7], "e": [2, 3, 4, 7], "poisson_ratio": [2, 3, 7], "nu": [2, 3, 7], "displaystyl": [2, 3, 4], "left": [2, 3, 4], "begin": [2, 3, 4, 12], "matrix": [2, 3, 4, 6, 10], "frac": [2, 3, 4], "0": [2, 3, 4, 6, 8, 9, 10], "right": [2, 3, 4], "end": [2, 3, 4], "3": [2, 3, 4, 6, 8, 9, 10, 12], "stress_tensor": 2, "creat": [2, 6, 8, 9, 10, 12], "notat": [2, 4, 8, 9, 10], "subs_dict": [2, 10], "4": [2, 3, 4, 6, 8, 9, 10], "5": [2, 3, 4, 6, 8, 9, 10, 12], "sub": [2, 10], "kei": [2, 10], "true": [2, 4, 6, 7], "sigma_": 2, "11": [2, 3, 4], "strain_tensor": 2, "strain_tensor_expr": 2, "hookes_law": 2, "eq": 2, "epsilon_": 2, "22": [2, 4], "33": [2, 4], "23": [2, 3, 4], "13": [2, 4], "12": [2, 3, 4], "stiffness_tensor": [2, 3, 7], "lames_param": [2, 7], "fals": [2, 6, 10], "6": [2, 3, 6, 10, 12], "7": [2, 3, 4], "stress_tensor_expr": 2, "hookes_law_invers": 2, "symbolictransverseisotropicmateri": [3, 7, 11], "symbolicorthotropicmateri": [3, 7, 11], "__dict__": 3, "mechanical_prop": [3, 7], "thermic_prop": [3, 7], "us": [3, 10, 12], "lam\u00e9": 3, "paramet": [3, 10], "lamda": [3, 7], "mu": [3, 7], "lambda": 3, "symbolic_transverse_isotropic_materi": 3, "youngs_modulus_parallel": [3, 7], "e_l": [3, 7], "youngs_modulus_transvers": [3, 7], "e_t": [3, 7], "shear_modulus_parallel": [3, 7], "g_l": [3, 7], "shear_modulus_transvers": [3, 7], "g_t": [3, 7], "e_": 3, "l": 3, "t": 3, "g_": 3, "8": [3, 4], "symbolic_orthotropic_materi": 3, "e1": [3, 7], "e2": [3, 7], "e3": [3, 7], "g12": [3, 7], "g23": [3, 7], "g31": [3, 7], "nu12": [3, 7], "nu23": [3, 7], "nu31": [3, 7], "9": [3, 4], "nu_": 3, "31": [3, 4], "10": [3, 4], "atop": 3, "e_3": 3, "e_1": 3, "g_3": 3, "g_1": 3, "ipython": 4, "markdown": 4, "symbolictensor": [4, 11], "symbolicthreebythreetensor": [4, 10, 11], "symbolicsymmetricthreebythreetensor": [4, 8, 9, 10, 11], "symbolicsixbysixtensor": [4, 7, 10, 11], "b": 4, "c": 4, "d": 4, "f": 4, "g": 4, "h": 4, "i": [4, 6, 10, 12], "immutabledensendimarrai": 4, "A": [4, 10], "__class__": 4, "from_list": [4, 6, 10, 12], "shape": [4, 6, 10], "list_notation_1": 4, "list_notation_2": 4, "default": 4, "to_gener": [4, 6, 8, 9, 10], "14": 4, "15": 4, "16": 4, "17": 4, "18": 4, "19": 4, "36": 4, "20": 4, "data_list": 4, "rang": 4, "37": 4, "21": 4, "24": 4, "25": 4, "26": 4, "27": 4, "28": 4, "29": 4, "30": 4, "32": 4, "34": 4, "35": 4, "elemnt": 4, "j": [4, 10], "thi": [4, 10, 12], "wai": 4, "name": [4, 7, 8, 9, 10], "x": 4, "x_": 4, "custom": 4, "a_": 4, "41": 4, "42": 4, "43": 4, "44": 4, "45": 4, "46": 4, "51": 4, "52": 4, "53": 4, "54": 4, "55": 4, "56": 4, "61": 4, "62": 4, "63": 4, "64": 4, "65": 4, "66": 4, "to_3x3": [4, 6, 10], "is_symmetr": [4, 6, 10, 12], "to_sym_3x3": [4, 6, 10], "to_symmetr": [4, 6, 10], "38": 4, "_": 4, "sqrt": 4, "eig": 4, "eig_val": 4, "eig_vect": 4, "40": 4, "p": 4, "diagon": [4, 10], "threebythreetensor": [5, 6, 12], "sixbysixtensor": [5, 6], "symmetricthreebythreetensor": [5, 6], "class": [6, 7, 8, 9, 10, 12], "base": [6, 7, 8, 9, 10], "object": [6, 7, 10], "repres": [6, 10], "gener": 6, "encapsul": 6, "numpi": 6, "arrai": [6, 10], "attribut": 6, "np": 6, "ndarrai": 6, "The": [6, 10], "store": 6, "method": [6, 10], "check": [6, 10, 12], "symmetr": [6, 10], "is_second_rank": [6, 10], "second": 6, "rank": 6, "is_fourth_rank": [6, 10], "fourth": 6, "is_3x3": 6, "3x3": [6, 10], "is_6x6": 6, "6x6": [6, 10], "is_3x3x3x3": 6, "3x3x3x3": 6, "to_6x6": [6, 10], "list": [6, 10, 12], "return": [6, 10], "bool": 6, "otherwis": 6, "classmethod": [6, 8, 9, 10], "mode": 6, "voigt_map": [6, 10], "inverse_voigt_map": [6, 10], "symboliccompliancetensor": [7, 11], "none": [7, 8, 9, 10], "symbolicstiffnesstensor": [7, 11], "symbolicmateri": [7, 11], "symbolicelasticmateri": [7, 11], "kwarg": 7, "get_lame_param": 7, "get_youngs_param": 7, "props_dict": 7, "props_kei": 7, "strain_voigt_map": 8, "epsilon": 8, "normal_compon": [8, 9], "shear_compon": [8, 9], "principal_compon": [8, 9], "volumetric_strain": 8, "stress_voigt_map": 9, "sigma": 9, "pressur": 9, "tresca": 9, "von_mis": 9, "offer": 10, "manipul": 10, "It": 10, "": [10, 12], "design": 10, "handl": 10, "variou": 10, "oper": 10, "manner": 10, "ideal": 10, "applic": [10, 12], "physic": 10, "engin": 10, "relat": 10, "field": 10, "initi": 10, "provid": 10, "basic": [10, 12], "properti": 10, "includ": 10, "symmetri": 10, "inherit": 10, "specif": 10, "addit": 10, "tailor": 10, "structur": 10, "extend": 10, "function": [10, 12], "work": [10, 12], "special": 10, "incorpor": 10, "voigt": 10, "map": 10, "transform": 10, "comput": 10, "focus": 10, "emphas": 10, "eas": 10, "flexibl": 10, "leverag": 10, "power": 10, "mathemat": 10, "express": 10, "static": 10, "notation_standard_map": 10, "n": 10, "dictionari": 10, "tupl": 10, "flatten": 10, "valu": 10, "posit": 10, "an": [10, 12], "nxn": 10, "its": 10, "correspond": 10, "size": 10, "notation_standard_inverse_map": 10, "invers": 10, "is_squar": 10, "to_matrix": 10, "standard_map": 10, "inverse_standard_map": 10, "inverse_map": 10, "standard": 10, "voight": 10, "walk": 12, "you": 12, "through": 12, "start": 12, "project": 12, "ll": 12, "learn": 12, "how": 12, "softwar": 12, "see": 12, "action": 12, "can": 12, "do": 12, "pip": 12, "ensur": 12, "have": 12, "necessari": 12, "prerequisit": 12, "ani": 12, "now": 12, "let": 12, "new": 12, "python": 12, "script": 12, "open": 12, "interact": 12, "session": 12, "execut": 12, "m": 12, "print": 12, "demonstr": 12, "For": 12, "more": 12, "complex": 12, "case": 12, "refer": 12, "document": 12, "congratul": 12, "ve": 12, "successfulli": 12, "To": 12, "dive": 12, "deeper": 12, "consid": 12, "explor": 12, "follow": 12, "resourc": 12, "user": 12, "detail": 12, "inform": 12, "about": 12, "out": 12, "link_to_user_guid": 12, "api": 12, "If": 12, "re": 12, "look": 12, "link_to_api_refer": 12, "great": 12, "visit": 12, "our": 12, "link_to_exampl": 12, "encount": 12, "issu": 12, "question": 12, "pleas": 12, "consult": 12, "faq": 12, "link_to_faq": 12, "contact": 12, "u": 12, "link_to_contact_pag": 12}, "objects": {"mechpy.core.numeric": [[6, 0, 0, "-", "tensor"]], "mechpy.core.numeric.tensor": [[6, 1, 1, "", "SixBySixTensor"], [6, 1, 1, "", "SymmetricThreeByThreeTensor"], [6, 1, 1, "", "Tensor"], [6, 1, 1, "", "ThreeByThreeTensor"]], "mechpy.core.numeric.tensor.SixBySixTensor": [[6, 2, 1, "", "from_list"], [6, 3, 1, "", "shape"]], "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor": [[6, 3, 1, "", "INVERSE_VOIGT_MAPPING"], [6, 3, 1, "", "VOIGT_MAPPING"], [6, 2, 1, "", "eigenvalues"], [6, 2, 1, "", "from_list"], [6, 2, 1, "", "is_symmetric"], [6, 3, 1, "", "shape"], [6, 2, 1, "", "to_general"]], "mechpy.core.numeric.tensor.Tensor": [[6, 2, 1, "", "from_list"], [6, 2, 1, "", "is_3x3"], [6, 2, 1, "", "is_3x3x3x3"], [6, 2, 1, "", "is_6x6"], [6, 2, 1, "", "is_fourth_rank"], [6, 2, 1, "", "is_second_rank"], [6, 2, 1, "", "is_symmetric"], [6, 2, 1, "", "to_3x3"], [6, 2, 1, "", "to_6x6"], [6, 2, 1, "", "to_sym_3x3"]], "mechpy.core.numeric.tensor.ThreeByThreeTensor": [[6, 2, 1, "", "from_list"], [6, 3, 1, "", "shape"], [6, 2, 1, "", "to_symmetric"]], "mechpy.core.symbolic": [[7, 0, 0, "-", "material"], [8, 0, 0, "-", "strain"], [9, 0, 0, "-", "stress"], [10, 0, 0, "-", "tensor"]], "mechpy.core.symbolic.material": [[7, 1, 1, "", "SymbolicComplianceTensor"], [7, 1, 1, "", "SymbolicElasticMaterial"], [7, 1, 1, "", "SymbolicIsotropicMaterial"], [7, 1, 1, "", "SymbolicMaterial"], [7, 1, 1, "", "SymbolicOrthotropicMaterial"], [7, 1, 1, "", "SymbolicStiffnessTensor"], [7, 1, 1, "", "SymbolicTransverseIsotropicMaterial"]], "mechpy.core.symbolic.material.SymbolicElasticMaterial": [[7, 2, 1, "", "compliance_tensor"], [7, 2, 1, "", "stiffness_tensor"]], "mechpy.core.symbolic.material.SymbolicIsotropicMaterial": [[7, 2, 1, "", "compliance_tensor"], [7, 2, 1, "", "get_lame_params"], [7, 2, 1, "", "get_youngs_params"], [7, 2, 1, "", "stiffness_tensor"]], "mechpy.core.symbolic.material.SymbolicOrthotropicMaterial": [[7, 3, 1, "", "props_keys"], [7, 2, 1, "", "stiffness_tensor"]], "mechpy.core.symbolic.material.SymbolicTransverseIsotropicMaterial": [[7, 3, 1, "", "props_dict"], [7, 2, 1, "", "stiffness_tensor"]], "mechpy.core.symbolic.strain": [[8, 1, 1, "", "SymbolicStrainTensor"]], "mechpy.core.symbolic.strain.SymbolicStrainTensor": [[8, 3, 1, "", "STRAIN_VOIGT_MAPPING"], [8, 2, 1, "", "create"], [8, 2, 1, "", "normal_components"], [8, 2, 1, "", "principal_components"], [8, 2, 1, "", "shear_components"], [8, 2, 1, "", "to_general"], [8, 2, 1, "", "volumetric_strain"]], "mechpy.core.symbolic.stress": [[9, 1, 1, "", "SymbolicStressTensor"]], "mechpy.core.symbolic.stress.SymbolicStressTensor": [[9, 3, 1, "", "STRESS_VOIGT_MAPPING"], [9, 2, 1, "", "create"], [9, 2, 1, "", "normal_components"], [9, 2, 1, "", "pressure"], [9, 2, 1, "", "principal_components"], [9, 2, 1, "", "shear_components"], [9, 2, 1, "", "to_general"], [9, 2, 1, "", "tresca"], [9, 2, 1, "", "von_mises"]], "mechpy.core.symbolic.tensor": [[10, 1, 1, "", "SymbolicSixBySixTensor"], [10, 1, 1, "", "SymbolicSymmetricThreeByThreeTensor"], [10, 1, 1, "", "SymbolicTensor"], [10, 1, 1, "", "SymbolicThreeByThreeTensor"]], "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor": [[10, 2, 1, "", "create"], [10, 2, 1, "", "from_list"], [10, 3, 1, "", "shape"]], "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor": [[10, 3, 1, "", "INVERSE_STANDARD_MAPPING"], [10, 3, 1, "", "INVERSE_VOIGT_MAPPING"], [10, 3, 1, "", "NOTATIONS"], [10, 3, 1, "", "STANDARD_MAPPING"], [10, 3, 1, "", "VOIGT_MAPPING"], [10, 2, 1, "", "create"], [10, 2, 1, "", "diagonalize"], [10, 2, 1, "", "eigenvalues"], [10, 2, 1, "", "eigenvectors"], [10, 2, 1, "", "from_list"], [10, 2, 1, "", "is_symmetric"], [10, 3, 1, "", "shape"], [10, 2, 1, "", "to_general"]], "mechpy.core.symbolic.tensor.SymbolicTensor": [[10, 2, 1, "", "create"], [10, 2, 1, "", "diagonalize"], [10, 2, 1, "", "eigenvalues"], [10, 2, 1, "", "eigenvectors"], [10, 2, 1, "", "from_list"], [10, 2, 1, "", "is_fourth_rank"], [10, 2, 1, "", "is_second_rank"], [10, 2, 1, "", "is_square"], [10, 2, 1, "", "is_symmetric"], [10, 2, 1, "", "notation_standard_inverse_map"], [10, 2, 1, "", "notation_standard_map"], [10, 2, 1, "", "subs"], [10, 2, 1, "", "to_3x3"], [10, 2, 1, "", "to_6x6"], [10, 2, 1, "", "to_matrix"], [10, 2, 1, "", "to_sym_3x3"]], "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor": [[10, 2, 1, "", "create"], [10, 2, 1, "", "from_list"], [10, 3, 1, "", "shape"], [10, 2, 1, "", "to_symmetric"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "mechpi": 0, "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "notebook": [1, 2, 3, 4], "symblic": 2, "elast": 2, "simpl": 2, "traction": 2, "complianc": 2, "tensor": [2, 4, 6, 8, 9, 10], "stress": [2, 9], "result": 2, "deform": 2, "stiff": 2, "strain": [2, 8], "symbol": [3, 4, 7, 8, 9, 10, 11], "materi": [3, 7], "isotrop": 3, "transvers": 3, "orthotrop": 3, "custom": 3, "init": 4, "method": 4, "from": 4, "list": 4, "3x3": 4, "symmetr": 4, "1": 4, "2": 4, "6": 4, "element": 4, "6x6": 4, "creat": 4, "convert": 4, "gener": 4, "multipl": 4, "get": 4, "compon": 4, "eigenvalu": 4, "eigenvector": 4, "numer": [5, 6], "symbolictensor": 10, "modul": 10, "quickstart": 12, "guid": 12, "instal": 12, "run": 12, "your": 12, "first": 12, "exampl": 12, "next": 12, "step": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Welcome to MechPy\u2019s documentation!": [[0, "welcome-to-mechpy-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Notebooks": [[1, "notebooks"]], "Symblic Elasticity Notebook": [[2, "Symblic-Elasticity-Notebook"]], "Simple Traction": [[2, "Simple-Traction"]], "Compliance Tensor": [[2, "Compliance-Tensor"]], "Stress Tensor": [[2, "Stress-Tensor"]], "Result": [[2, "Result"], [2, "id1"]], "Simple Deformation": [[2, "Simple-Deformation"]], "Stiffness Tensor": [[2, "Stiffness-Tensor"]], "Strain Tensor": [[2, "Strain-Tensor"]], "Symbolic Material Notebook": [[3, "Symbolic-Material-Notebook"]], "Symbolic Material": [[3, "Symbolic-Material"], [7, "module-mechpy.core.symbolic.material"]], "Isotropic Material": [[3, "Isotropic-Material"]], "Transverse Isotropic Material": [[3, "Transverse-Isotropic-Material"]], "Orthotropic Material": [[3, "Orthotropic-Material"]], "Custom Symbols": [[3, "Custom-Symbols"]], "Symbolic Tensor Notebook": [[4, "Symbolic-Tensor-Notebook"]], "Symbolic Tensor": [[4, "Symbolic-Tensor"], [4, "id1"], [10, "module-mechpy.core.symbolic.tensor"]], "Init Method": [[4, "Init-Method"]], "From List method": [[4, "From-List-method"]], "Symbolic 3x3 Tensor": [[4, "Symbolic-3x3-Tensor"]], "Symbolic Symmetric 3x3 Tensor": [[4, "Symbolic-Symmetric-3x3-Tensor"]], "List 1": [[4, "List-1"]], "List 2": [[4, "List-2"]], "list of 6 elements": [[4, "list-of-6-elements"]], "Symbolic 6x6 Tensor": [[4, "Symbolic-6x6-Tensor"]], "Create Method": [[4, "Create-Method"]], "Converting": [[4, "Converting"]], "Tensor to 3x3": [[4, "Tensor-to-3x3"]], "General to Symmetric 3x3": [[4, "General-to-Symmetric-3x3"]], "3x3 to Symmetric": [[4, "3x3-to-Symmetric"]], "Converting to general": [[4, "Converting-to-general"]], "Multiplication": [[4, "Multiplication"]], "Getting Tensor Components": [[4, "Getting-Tensor-Components"]], "Eigenvalues and Eigenvectors": [[4, "Eigenvalues-and-Eigenvectors"]], "Numeric": [[5, "numeric"]], "Numeric Tensor": [[6, "module-mechpy.core.numeric.tensor"]], "Symbolic Strain Tensor": [[8, "module-mechpy.core.symbolic.strain"]], "Symbolic Stress Tensor": [[9, "module-mechpy.core.symbolic.stress"]], "SymbolicTensor Module": [[10, "symbolictensor-module"]], "Symbolic": [[11, "symbolic"]], "Quickstart Guide": [[12, "quickstart-guide"]], "Installation": [[12, "installation"]], "Running Your First Example": [[12, "running-your-first-example"]], "Next Steps": [[12, "next-steps"]]}, "indexentries": {"inverse_voigt_mapping (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.INVERSE_VOIGT_MAPPING"]], "sixbysixtensor (class in mechpy.core.numeric.tensor)": [[6, "mechpy.core.numeric.tensor.SixBySixTensor"]], "symmetricthreebythreetensor (class in mechpy.core.numeric.tensor)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor"]], "tensor (class in mechpy.core.numeric.tensor)": [[6, "mechpy.core.numeric.tensor.Tensor"]], "threebythreetensor (class in mechpy.core.numeric.tensor)": [[6, "mechpy.core.numeric.tensor.ThreeByThreeTensor"]], "voigt_mapping (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.VOIGT_MAPPING"]], "eigenvalues() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.eigenvalues"]], "from_list() (mechpy.core.numeric.tensor.sixbysixtensor class method)": [[6, "mechpy.core.numeric.tensor.SixBySixTensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.symmetricthreebythreetensor class method)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.tensor class method)": [[6, "mechpy.core.numeric.tensor.Tensor.from_list"]], "from_list() (mechpy.core.numeric.tensor.threebythreetensor class method)": [[6, "mechpy.core.numeric.tensor.ThreeByThreeTensor.from_list"]], "is_3x3() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_3x3"]], "is_3x3x3x3() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_3x3x3x3"]], "is_6x6() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_6x6"]], "is_fourth_rank() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_fourth_rank"]], "is_second_rank() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_second_rank"]], "is_symmetric() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.is_symmetric"]], "is_symmetric() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.is_symmetric"]], "mechpy.core.numeric.tensor": [[6, "module-mechpy.core.numeric.tensor"]], "module": [[6, "module-mechpy.core.numeric.tensor"], [7, "module-mechpy.core.symbolic.material"], [8, "module-mechpy.core.symbolic.strain"], [9, "module-mechpy.core.symbolic.stress"], [10, "module-mechpy.core.symbolic.tensor"]], "shape (mechpy.core.numeric.tensor.sixbysixtensor attribute)": [[6, "mechpy.core.numeric.tensor.SixBySixTensor.shape"]], "shape (mechpy.core.numeric.tensor.symmetricthreebythreetensor attribute)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.shape"]], "shape (mechpy.core.numeric.tensor.threebythreetensor attribute)": [[6, "mechpy.core.numeric.tensor.ThreeByThreeTensor.shape"]], "to_3x3() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.to_3x3"]], "to_6x6() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.to_6x6"]], "to_general() (mechpy.core.numeric.tensor.symmetricthreebythreetensor method)": [[6, "mechpy.core.numeric.tensor.SymmetricThreeByThreeTensor.to_general"]], "to_sym_3x3() (mechpy.core.numeric.tensor.tensor method)": [[6, "mechpy.core.numeric.tensor.Tensor.to_sym_3x3"]], "to_symmetric() (mechpy.core.numeric.tensor.threebythreetensor method)": [[6, "mechpy.core.numeric.tensor.ThreeByThreeTensor.to_symmetric"]], "symboliccompliancetensor (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicComplianceTensor"]], "symbolicelasticmaterial (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicElasticMaterial"]], "symbolicisotropicmaterial (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicIsotropicMaterial"]], "symbolicmaterial (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicMaterial"]], "symbolicorthotropicmaterial (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicOrthotropicMaterial"]], "symbolicstiffnesstensor (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicStiffnessTensor"]], "symbolictransverseisotropicmaterial (class in mechpy.core.symbolic.material)": [[7, "mechpy.core.symbolic.material.SymbolicTransverseIsotropicMaterial"]], "compliance_tensor() (mechpy.core.symbolic.material.symbolicelasticmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicElasticMaterial.compliance_tensor"]], "compliance_tensor() (mechpy.core.symbolic.material.symbolicisotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicIsotropicMaterial.compliance_tensor"]], "get_lame_params() (mechpy.core.symbolic.material.symbolicisotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicIsotropicMaterial.get_lame_params"]], "get_youngs_params() (mechpy.core.symbolic.material.symbolicisotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicIsotropicMaterial.get_youngs_params"]], "mechpy.core.symbolic.material": [[7, "module-mechpy.core.symbolic.material"]], "props_dict (mechpy.core.symbolic.material.symbolictransverseisotropicmaterial attribute)": [[7, "mechpy.core.symbolic.material.SymbolicTransverseIsotropicMaterial.props_dict"]], "props_keys (mechpy.core.symbolic.material.symbolicorthotropicmaterial attribute)": [[7, "mechpy.core.symbolic.material.SymbolicOrthotropicMaterial.props_keys"]], "stiffness_tensor() (mechpy.core.symbolic.material.symbolicelasticmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicElasticMaterial.stiffness_tensor"]], "stiffness_tensor() (mechpy.core.symbolic.material.symbolicisotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicIsotropicMaterial.stiffness_tensor"]], "stiffness_tensor() (mechpy.core.symbolic.material.symbolicorthotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicOrthotropicMaterial.stiffness_tensor"]], "stiffness_tensor() (mechpy.core.symbolic.material.symbolictransverseisotropicmaterial method)": [[7, "mechpy.core.symbolic.material.SymbolicTransverseIsotropicMaterial.stiffness_tensor"]], "strain_voigt_mapping (mechpy.core.symbolic.strain.symbolicstraintensor attribute)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.STRAIN_VOIGT_MAPPING"]], "symbolicstraintensor (class in mechpy.core.symbolic.strain)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor"]], "create() (mechpy.core.symbolic.strain.symbolicstraintensor class method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.create"]], "mechpy.core.symbolic.strain": [[8, "module-mechpy.core.symbolic.strain"]], "normal_components() (mechpy.core.symbolic.strain.symbolicstraintensor method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.normal_components"]], "principal_components() (mechpy.core.symbolic.strain.symbolicstraintensor method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.principal_components"]], "shear_components() (mechpy.core.symbolic.strain.symbolicstraintensor method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.shear_components"]], "to_general() (mechpy.core.symbolic.strain.symbolicstraintensor method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.to_general"]], "volumetric_strain() (mechpy.core.symbolic.strain.symbolicstraintensor method)": [[8, "mechpy.core.symbolic.strain.SymbolicStrainTensor.volumetric_strain"]], "stress_voigt_mapping (mechpy.core.symbolic.stress.symbolicstresstensor attribute)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.STRESS_VOIGT_MAPPING"]], "symbolicstresstensor (class in mechpy.core.symbolic.stress)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor"]], "create() (mechpy.core.symbolic.stress.symbolicstresstensor class method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.create"]], "mechpy.core.symbolic.stress": [[9, "module-mechpy.core.symbolic.stress"]], "normal_components() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.normal_components"]], "pressure() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.pressure"]], "principal_components() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.principal_components"]], "shear_components() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.shear_components"]], "to_general() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.to_general"]], "tresca() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.tresca"]], "von_mises() (mechpy.core.symbolic.stress.symbolicstresstensor method)": [[9, "mechpy.core.symbolic.stress.SymbolicStressTensor.von_mises"]], "inverse_standard_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.INVERSE_STANDARD_MAPPING"]], "inverse_voigt_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.INVERSE_VOIGT_MAPPING"]], "notations (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.NOTATIONS"]], "standard_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.STANDARD_MAPPING"]], "symbolicsixbysixtensor (class in mechpy.core.symbolic.tensor)": [[10, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor"]], "symbolicsymmetricthreebythreetensor (class in mechpy.core.symbolic.tensor)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor"]], "symbolictensor (class in mechpy.core.symbolic.tensor)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor"]], "symbolicthreebythreetensor (class in mechpy.core.symbolic.tensor)": [[10, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor"]], "voigt_mapping (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.VOIGT_MAPPING"]], "create() (mechpy.core.symbolic.tensor.symbolicsixbysixtensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolictensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.create"]], "create() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.create"]], "diagonalize() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.diagonalize"]], "diagonalize() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.diagonalize"]], "eigenvalues() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.eigenvalues"]], "eigenvalues() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.eigenvalues"]], "eigenvectors() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.eigenvectors"]], "eigenvectors() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.eigenvectors"]], "from_list() (mechpy.core.symbolic.tensor.symbolicsixbysixtensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolictensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.from_list"]], "from_list() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor class method)": [[10, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.from_list"]], "is_fourth_rank() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.is_fourth_rank"]], "is_second_rank() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.is_second_rank"]], "is_square() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.is_square"]], "is_symmetric() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.is_symmetric"]], "is_symmetric() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.is_symmetric"]], "mechpy.core.symbolic.tensor": [[10, "module-mechpy.core.symbolic.tensor"]], "notation_standard_inverse_map() (mechpy.core.symbolic.tensor.symbolictensor static method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.notation_standard_inverse_map"]], "notation_standard_map() (mechpy.core.symbolic.tensor.symbolictensor static method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.notation_standard_map"]], "shape (mechpy.core.symbolic.tensor.symbolicsixbysixtensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSixBySixTensor.shape"]], "shape (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.shape"]], "shape (mechpy.core.symbolic.tensor.symbolicthreebythreetensor attribute)": [[10, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.shape"]], "subs() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.subs"]], "to_3x3() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.to_3x3"]], "to_6x6() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.to_6x6"]], "to_general() (mechpy.core.symbolic.tensor.symbolicsymmetricthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicSymmetricThreeByThreeTensor.to_general"]], "to_matrix() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.to_matrix"]], "to_sym_3x3() (mechpy.core.symbolic.tensor.symbolictensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicTensor.to_sym_3x3"]], "to_symmetric() (mechpy.core.symbolic.tensor.symbolicthreebythreetensor method)": [[10, "mechpy.core.symbolic.tensor.SymbolicThreeByThreeTensor.to_symmetric"]]}})