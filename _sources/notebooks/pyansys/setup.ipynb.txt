{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from ansys.mapdl.core import launch_mapdl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "mapdl = launch_mapdl()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MATERIAL          1     PRXY =  0.3000000"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define material properties\n",
    "mapdl.prep7()\n",
    "mapdl.mp('EX', 1, 210e9)  # Young's Modulus in Pa\n",
    "mapdl.mp('PRXY', 1, 0.3)  # Poisson's Ratio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define keypoints for the cylinder geometry\n",
    "inner_radius = 0.05  # in meters\n",
    "outer_radius = 0.1   # in meters\n",
    "height = 0.2  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Bottom keypoints\n",
    "mapdl.k(1, inner_radius, 0, 0)\n",
    "mapdl.k(2, outer_radius, 0, 0)\n",
    "\n",
    "# Top keypoints\n",
    "mapdl.k(3, inner_radius, height, 0)\n",
    "mapdl.k(4, outer_radius, height, 0)\n",
    "\n",
    "# Define lines for the cylinder\n",
    "mapdl.l(1, 2)\n",
    "mapdl.l(2, 4)\n",
    "mapdl.l(4, 3)\n",
    "mapdl.l(3, 1)\n",
    "\n",
    "# Define area\n",
    "mapdl.al(1, 2, 3, 4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "906c64b5409241fca77796f559cc7809",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Widget(value=\"<iframe src='http://localhost:58432/index.html?ui=P_0x162369670d0_0&reconnect=auto' style='width…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Display the area\n",
    "mapdl.aplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GENERATE NODES AND ELEMENTS   IN  ALL  SELECTED AREAS    \n",
       "    ** AREA     1 MESHED WITH     400 QUADRILATERALS,        0 TRIANGLES **\n",
       "\n",
       " NUMBER OF AREAS MESHED     =          1\n",
       " MAXIMUM NODE NUMBER        =        451\n",
       " MAXIMUM ELEMENT NUMBER     =        400"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define element type for axisymmetric analysis\n",
    "mapdl.et(1, 'PLANE182')\n",
    "\n",
    "# Define element size for the mesh\n",
    "element_size = 0.005  # Smaller value for finer mesh\n",
    "mapdl.esize(element_size)\n",
    "\n",
    "# Meshing the area\n",
    "mapdl.amesh('ALL')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ffb27074e3e04db09213c6247f318b4b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Widget(value=\"<iframe src='http://localhost:58432/index.html?ui=P_0x1623e28d590_1&reconnect=auto' style='width…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Display the mesh\n",
    "mapdl.eplot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GENERATE SURFACE LOAD PRES ON SURFACE DEFINED BY ALL SELECTED NODES\n",
       " VALUES= -1000000.00      0.00000000    \n",
       "\n",
       " NUMBER OF PRES ELEMENT FACE LOADS STORED =        100"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select the line representing the outer surface\n",
    "mapdl.lsel('S', 'LINE', '', 2)\n",
    "\n",
    "# Apply displacement constraints\n",
    "mapdl.d('ALL', 'UX', 0)  # Constrain radial displacement (along X)\n",
    "mapdl.d('ALL', 'UY', 0)  # Constrain axial displacement (along Y)\n",
    "\n",
    "# Select the line representing the inner surface\n",
    "mapdl.lsel('S', 'LINE', '', 4)\n",
    "\n",
    "# Apply pressure load\n",
    "pressure_value = -1e6  # Negative value for pressure applied inward\n",
    "mapdl.sf('ALL', 'PRES', pressure_value)  # Apply pressure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "*****  MAPDL SOLVE    COMMAND  *****\n",
       "\n",
       " *** NOTE ***                            CP =       0.094   TIME= 14:50:59\n",
       " There is no title defined for this analysis.                            \n",
       "\n",
       " *** SELECTION OF ELEMENT TECHNOLOGIES FOR APPLICABLE ELEMENTS ***\n",
       "                ---GIVE SUGGESTIONS ONLY---\n",
       "\n",
       " ELEMENT TYPE  1 IS PLANE182 WITH PLANE STRESS OPTION. IT IS ASSOCIATED WITH\n",
       " LINEAR MATERIALS ONLY. KEYOPT(1)=2 IS SUGGESTED.\n",
       "\n",
       "\n",
       "\n",
       " *** MAPDL - ENGINEERING ANALYSIS SYSTEM  RELEASE 2023 R2          23.2     ***\n",
       " Ansys Mechanical Enterprise Academic Student      \n",
       " 01055371  VERSION=WINDOWS x64   14:50:59  DEC 04, 2023 CP=      0.094\n",
       "\n",
       "                                                                               \n",
       "\n",
       "\n",
       "\n",
       "                       S O L U T I O N   O P T I O N S\n",
       "\n",
       "   PROBLEM DIMENSIONALITY. . . . . . . . . . . . .2-D                  \n",
       "   DEGREES OF FREEDOM. . . . . . UX   UY  \n",
       "   ANALYSIS TYPE . . . . . . . . . . . . . . . . .STATIC (STEADY-STATE)\n",
       "   GLOBALLY ASSEMBLED MATRIX . . . . . . . . . . .SYMMETRIC  \n",
       "\n",
       " *** NOTE ***                            CP =       0.094   TIME= 14:50:59\n",
       " Present time 0 is less than or equal to the previous time.  Time will   \n",
       " default to 1.                                                           \n",
       "\n",
       " *** NOTE ***                            CP =       0.094   TIME= 14:50:59\n",
       " The conditions for direct assembly have been met.  No .emat or .erot    \n",
       " files will be produced.                                                 \n",
       "\n",
       "                      L O A D   S T E P   O P T I O N S\n",
       "\n",
       "   LOAD STEP NUMBER. . . . . . . . . . . . . . . .     1\n",
       "   TIME AT END OF THE LOAD STEP. . . . . . . . . .  1.0000    \n",
       "   NUMBER OF SUBSTEPS. . . . . . . . . . . . . . .     1\n",
       "   STEP CHANGE BOUNDARY CONDITIONS . . . . . . . .    NO\n",
       "   PRINT OUTPUT CONTROLS . . . . . . . . . . . . .NO PRINTOUT\n",
       "   DATABASE OUTPUT CONTROLS. . . . . . . . . . . .ALL DATA WRITTEN\n",
       "                                                  FOR THE LAST SUBSTEP\n",
       "\n",
       "\n",
       " SOLUTION MONITORING INFO IS WRITTEN TO FILE= file.mntr                                                                                                                                                                                                                                                           \n",
       "\n",
       "\n",
       " Range of element maximum matrix coefficients in global coordinates\n",
       " Maximum = 1.038461538E+11 at element 388.                               \n",
       " Minimum = 1.038461538E+11 at element 171.                               \n",
       "\n",
       "   *** ELEMENT MATRIX FORMULATION TIMES\n",
       "     TYPE    NUMBER   ENAME      TOTAL CP  AVE CP\n",
       "\n",
       "        1       400  PLANE182      0.031   0.000078\n",
       " Time at end of element matrix formulation CP = 0.109375.                \n",
       "\n",
       " *** WARNING ***                         CP =       0.109   TIME= 14:50:59\n",
       " There are no active degrees of freedom.                                 \n",
       "\n",
       "   *** ELEMENT RESULT CALCULATION TIMES\n",
       "     TYPE    NUMBER   ENAME      TOTAL CP  AVE CP\n",
       "\n",
       "        1       400  PLANE182      0.000   0.000000\n",
       "\n",
       "   *** NODAL LOAD CALCULATION TIMES\n",
       "     TYPE    NUMBER   ENAME      TOTAL CP  AVE CP\n",
       "\n",
       "        1       400  PLANE182      0.000   0.000000\n",
       " *** LOAD STEP     1   SUBSTEP     1  COMPLETED.    CUM ITER =      1\n",
       " *** TIME =   1.00000         TIME INC =   1.00000      NEW TRIANG MATRIX\n",
       "\n",
       "\n",
       " *** MAPDL BINARY FILE STATISTICS\n",
       "  BUFFER SIZE USED= 16384\n",
       "        0.062 MB WRITTEN ON ASSEMBLED MATRIX FILE: file.full\n",
       "        0.438 MB WRITTEN ON RESULTS FILE: file.rst"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mapdl.finish()\n",
    "mapdl.run('/SOLU')\n",
    "\n",
    "# Solve\n",
    "mapdl.solve()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "USE LOAD STEP     1  SUBSTEP     1  FOR LOAD CASE 0 \n",
       "\n",
       " SET COMMAND GOT LOAD STEP=     1  SUBSTEP=     1  CUMULATIVE ITERATION=     1\n",
       "   TIME/FREQUENCY=  1.0000    \n",
       " TITLE="
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Switch to post-processing\n",
    "mapdl.finish()\n",
    "mapdl.post1()\n",
    "mapdl.set(1, 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "113d672e9c5d4a1bbd7080afa4bfa557",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Widget(value=\"<iframe src='http://localhost:58432/index.html?ui=P_0x1623cc5d150_2&reconnect=auto' style='width…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mapdl.post_processing.plot_nodal_displacement()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bdc2816b3e1840f78ffbc57a5477c074",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Widget(value=\"<iframe src='http://localhost:58432/index.html?ui=P_0x16240f74dd0_3&reconnect=auto' style='width…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mapdl.post_processing.plot_nodal_eqv_stress()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
